// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String    @id @default(cuid())
  name            String
  email           String    @unique
  password        String
  phone           String?
  resetToken      String?
  resetTokenExpiry DateTime?
  addresses       Address[]
  orders          Order[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Address {
  id        String   @id @default(cuid())
  street    String
  number    String
  complement String?
  district  String
  city      String
  state     String
  zipCode   String
  isDefault Boolean  @default(false)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String        @id @default(cuid())
  name        String
  slug        String        @unique
  description String
  images      ProductImage[]
  category    String
  variants    ProductVariant[]
  brand       String
  rating      Float         @default(0)
  reviewCount Int          @default(0)
  tags        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model ProductImage {
  id        String   @id @default(cuid())
  url       String
  alt       String
  isMain    Boolean  @default(false)
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductVariant {
  id             String   @id @default(cuid())
  name           String
  price          Float
  compareAtPrice Float?
  sku            String   @unique
  stockQuantity  Int
  productId      String
  product        Product  @relation(fields: [productId], references: [id])
  orderItems     OrderItem[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Order {
  id          String      @id @default(cuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  items       OrderItem[]
  status      String
  total       Float
  addressId   String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id              String        @id @default(cuid())
  orderId         String
  order           Order         @relation(fields: [orderId], references: [id])
  variantId       String
  variant         ProductVariant @relation(fields: [variantId], references: [id])
  quantity        Int
  price          Float
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}
